name: 'Configure Deployment Environment'
description: 'Set and export environment variables needed to deploy to AWS based on branch name'
inputs:
  branch:
    description: 'name of the branch, pass in GITHUB_REF'
    required: true
  application:
    description: 'application this repo belongs to for finidng the namespace to deploy to'
    required: true
  variables:
    description: 'Vars as JSON'
    required: true    
  secrets:
    description: 'secrets as JSON'
    required: true      
runs:
  using: "composite"
  steps:
    - name: Get Environmnet From Branch
      shell: bash
      run: |
        echo "BRANCH=$(echo ${{ inputs.branch }} | cut -d'/' -f 3)"
        BRANCH=$(echo ${{ inputs.branch }} | cut -d'/' -f 3)
        if [[ ${BRANCH,,} == 'master' || ${BRANCH,,} == 'main' ]]; then
            echo "AWS_ENV=PROD" >> $GITHUB_ENV
        elif [[ ${BRANCH,,} == 'development' || ${BRANCH,,} == 'develop' ]]; then
            echo "AWS_ENV=DEV" >> $GITHUB_ENV
        else
            echo "AWS_ENV=FEATURE" >> $GITHUB_ENV
        fi      

    - name: check env context
      shell: bash
      env:
        VARIABLES: ${{ inputs.variables }}  
      run: |
        echo "variables:"
        echo "$VARIABLES"
        
    - name: Configure Environment
      shell: bash
      env:
        APPLICATION: ${{ inputs.application }}  
        VARIABLES: ${{ inputs.variables }}
        SECRETS: ${{ inputs.secrets }}
      run: |
        echo "region variable name is: ${{ format('{0}_AWS_REGION', env.AWS_ENV) }}"
        REGION_VARIABLE=$(echo ${{ format('{0}_AWS_REGION', env.AWS_ENV) }})
        echo $VARIABLES | jq ".$REGION_VARIABLE"
        token=$( echo $VARIABLES | jq ".$REGION_VARIABLE" )
        echo "token is: $token"
        echo "AUTH_TOKEN=$(echo $token)" >> "$GITHUB_ENV"
        echo "AWS_REGION=${{ env.VARIABLES[format('{0}_AWS_REGION', env.AWS_ENV)] }}" >> $GITHUB_ENV
        echo "AWS_ACCESS_KEY_ID=${{ inputs.secrets[format('{0}_AWS_ACCESS_KEY_ID', env.AWS_ENV)] }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ inputs.secrets[format('{0}_AWS_SECRET_ACCESS_KEY', env.AWS_ENV)] }}" >> $GITHUB_ENV
        echo "NAMESPACE=${{ inputs.variables[format('{0}_{1}_NAMESPACE', env.AWS_ENV, env.APPLICATION)] }}" >> $GITHUB_ENV  
